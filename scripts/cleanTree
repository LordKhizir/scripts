#!/usr/bin/env python3
import os


# cleandir - Clean current directory
# Remove unwanted files
# Remove comments

def check_and_clean_stl(filepath):
    washed_header: str = "STL header washed by cleanTree"
    washed_header = washed_header + ("_" * (80 - len(washed_header)))

    # Open file as binary, read first 80 characters
    with open(filepath, "rb") as read_file:
        header = read_file.read(80)
        header_as_text = header.decode("utf-8")
        if header_as_text.startswith("solid"):
            # ASCII STL files start with "solid"
            read_file.close()
            clean_ascii(filepath)
        elif header_as_text != washed_header:
            # Only clean if it was not previously cleaned
            read_file.close()
            clean_binary_stl(filepath, washed_header)
        else:
            print("\t\t Already washed")


def clean_binary_stl(filepath: str, washed_header: str):
    washed_header_bytes = washed_header.encode("utf-8")
    temp_filepath = filepath + "___TEMP_WASH___"
    with open(filepath, "rb") as read_file:
        with open(temp_filepath, "wb+") as write_file:
            write_file.write(washed_header_bytes)
            read_file.seek(len(washed_header_bytes))
            while True:
                chunk = read_file.read(1024)
                if not chunk:
                    break
                write_file.write(chunk)
    os.rename(temp_filepath, filepath)
    print("\t\t❌ Header washed")


def clean_ascii(filepath):
    comment_found: bool = False
    line: str
    lines: list[str]
    try:
        with open(filepath, "r") as f:
            lines = f.readlines()
        for line in lines:
            if line.startswith("#"):
                print("\tComment found.")
                comment_found = True
                break
    except UnicodeDecodeError:
        # Binary file, just continue
        exit

    if comment_found:
        print("\tCleaning")
        with open(filepath, "w") as f:
            for line in lines:
                if line.startswith("#"):
                    print("\t\t❌ Comment removed - ", line)
                else:
                    f.write(line)


def main():
    folder: str = "."
    for subdir, dirs, files in os.walk(folder):
        for filename in files:
            filepath = subdir + os.sep + filename
            name, extension = os.path.splitext(filepath)
            extension = extension.lower()

            print(filepath)

            # Files to be removed
            if filename.lower() in (".ds_store", "thumbs.db", "desktop.ini") \
                    or filename.startswith("._") \
                    or extension == ".txt":
                print("\t❌ Removing it")
                os.remove(filepath)

            # STL - Special process
            if extension == ".stl":
                check_and_clean_stl(filepath)

            # OBJ - Try to filter comments if it's ASCII
            if extension == ".obj":
                clean_ascii(filepath)


if __name__ == '__main__':
    main()
